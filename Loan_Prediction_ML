{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## DESCRIPTIVE ANALYSIS"
      ],
      "metadata": {
        "id": "75bmfGzkLFry"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pyspark"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WCjzb15gJ8kz",
        "outputId": "071b85be-18e3-4876-ccce-60c1b77a8b4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pyspark\n",
            "  Downloading pyspark-3.5.1.tar.gz (317.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.0/317.0 MB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n",
            "Building wheels for collected packages: pyspark\n",
            "  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyspark: filename=pyspark-3.5.1-py2.py3-none-any.whl size=317488491 sha256=79447aa16a04969ebbefca012199adcc2da61617dc2f0aac4f2b9e6e01545941\n",
            "  Stored in directory: /root/.cache/pip/wheels/80/1d/60/2c256ed38dddce2fdd93be545214a63e02fbd8d74fb0b7f3a6\n",
            "Successfully built pyspark\n",
            "Installing collected packages: pyspark\n",
            "Successfully installed pyspark-3.5.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xzBfvqtjDOGH"
      },
      "outputs": [],
      "source": [
        "from pyspark.sql import SparkSession\n",
        "from pyspark.sql.types import IntegerType\n",
        "from pyspark.sql.types import FloatType\n",
        "from pyspark.ml.evaluation import BinaryClassificationEvaluator\n",
        "from pyspark.sql.functions import col\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "spark = SparkSession.builder \\\n",
        "    .appName(\"LoanPrediction\") \\\n",
        "    .getOrCreate()"
      ],
      "metadata": {
        "id": "xvnN1KGbRAhL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = spark.read.csv(\"loan-prediction.csv\", header=True, inferSchema=True)"
      ],
      "metadata": {
        "id": "hqSFJq3BUsb-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.printSchema()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IkmhT5iwVS5l",
        "outputId": "5e706183-f265-4c2e-db1f-27eb6ee2e8e3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "root\n",
            " |-- Loan_ID: string (nullable = true)\n",
            " |-- Gender: string (nullable = true)\n",
            " |-- Married: string (nullable = true)\n",
            " |-- Dependents: string (nullable = true)\n",
            " |-- Education: string (nullable = true)\n",
            " |-- Self_Employed: string (nullable = true)\n",
            " |-- ApplicantIncome: integer (nullable = true)\n",
            " |-- CoapplicantIncome: double (nullable = true)\n",
            " |-- LoanAmount: integer (nullable = true)\n",
            " |-- Loan_Amount_Term: integer (nullable = true)\n",
            " |-- Credit_History: integer (nullable = true)\n",
            " |-- Property_Area: string (nullable = true)\n",
            " |-- Loan_Status: string (nullable = true)\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Rows and Columns\n",
        "\n",
        "print(\"Number of columns:\", len(df.columns))\n",
        "print(\"Number of rows:\", df.count())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v9oyN30oLkUM",
        "outputId": "44069309-b52f-47ea-8f65-68cee06184b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of columns: 13\n",
            "Number of rows: 614\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5WIU-bs8Viu5",
        "outputId": "348dccb3-935f-4d72-830d-b26e74161068"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "| Loan_ID|Gender|Married|Dependents|   Education|Self_Employed|ApplicantIncome|CoapplicantIncome|LoanAmount|Loan_Amount_Term|Credit_History|Property_Area|Loan_Status|\n",
            "+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "|LP001002|  Male|     No|         0|    Graduate|           No|           5849|              0.0|      NULL|             360|             1|        Urban|          Y|\n",
            "|LP001003|  Male|    Yes|         1|    Graduate|           No|           4583|           1508.0|       128|             360|             1|        Rural|          N|\n",
            "|LP001005|  Male|    Yes|         0|    Graduate|          Yes|           3000|              0.0|        66|             360|             1|        Urban|          Y|\n",
            "|LP001006|  Male|    Yes|         0|Not Graduate|           No|           2583|           2358.0|       120|             360|             1|        Urban|          Y|\n",
            "|LP001008|  Male|     No|         0|    Graduate|           No|           6000|              0.0|       141|             360|             1|        Urban|          Y|\n",
            "+--------+------+-------+----------+------------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Percent of missing values by columns\n",
        "\n",
        "for col in df.columns:\n",
        "    missing_percentage = (df.filter(df[col].isNull()).count() / df.count()) * 100\n",
        "    print(\"Column:\", col, \"Missing Percentage:\", round(missing_percentage, 2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "48f5zKaOWZ3C",
        "outputId": "f935ebe2-aca8-40c5-8f4c-9affd11c0876"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Column: Loan_ID Missing Percentage: 0.0\n",
            "Column: Gender Missing Percentage: 2.12\n",
            "Column: Married Missing Percentage: 0.49\n",
            "Column: Dependents Missing Percentage: 2.44\n",
            "Column: Education Missing Percentage: 0.0\n",
            "Column: Self_Employed Missing Percentage: 5.21\n",
            "Column: ApplicantIncome Missing Percentage: 0.0\n",
            "Column: CoapplicantIncome Missing Percentage: 0.0\n",
            "Column: LoanAmount Missing Percentage: 3.58\n",
            "Column: Loan_Amount_Term Missing Percentage: 2.28\n",
            "Column: Credit_History Missing Percentage: 8.14\n",
            "Column: Property_Area Missing Percentage: 0.0\n",
            "Column: Loan_Status Missing Percentage: 0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calulating the mean\n",
        "means = {col: df.selectExpr('avg(' + col + ')').collect()[0][0] for col in df.columns if isinstance(df.schema[col].dataType, (IntegerType, FloatType))}\n",
        "print(\"Means:\", means)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dheM584NTZir",
        "outputId": "52832212-2b23-4538-e202-c19263c52b4f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Means: {'ApplicantIncome': 5403.459283387622, 'LoanAmount': 146.41216216216216, 'Loan_Amount_Term': 342.0, 'Credit_History': 0.8421985815602837}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Median\n",
        "medians = {col: df.approxQuantile(col, [0.5], 0.01)[0] for col in df.columns if isinstance(df.schema[col].dataType, (IntegerType, FloatType))}\n",
        "print(\"Medians:\", medians)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E4RXMeGMXvKn",
        "outputId": "f16bc321-9b6a-4b66-8d45-0461e129c7db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Medians: {'ApplicantIncome': 3762.0, 'LoanAmount': 126.0, 'Loan_Amount_Term': 360.0, 'Credit_History': 1.0}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Mode\n",
        "def estimate_mode(df, col):\n",
        "    quantiles = df.approxQuantile(col, [0.5], 0.01)[0]\n",
        "    distinct_count = df.select(col).distinct().count()\n",
        "\n",
        "    if distinct_count <= 10:\n",
        "        return df.groupBy(col).count().orderBy('count', ascending=False).first()[col]\n",
        "    else:\n",
        "        return quantiles\n",
        "\n",
        "modes = {col: estimate_mode(df, col) for col in df.columns if isinstance(df.schema[col].dataType, (IntegerType, FloatType))}\n",
        "print(\"Modes:\", modes)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ji26SpQfUrNM",
        "outputId": "2a287a54-f652-48ee-e06e-213c88a2f596"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Modes: {'ApplicantIncome': 3762.0, 'LoanAmount': 126.0, 'Loan_Amount_Term': 360.0, 'Credit_History': 1}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Outliers\n",
        "\n",
        "outliers = {}\n",
        "for column in df.columns:\n",
        "\n",
        "    if isinstance(df.schema[column].dataType, (IntegerType, FloatType)):\n",
        "\n",
        "        quantiles = df.approxQuantile(column, [0.25, 0.75], 0.05)\n",
        "        Q1, Q3 = quantiles\n",
        "        IQR = Q3 - Q1\n",
        "\n",
        "        lower_bound = Q1 - 1.5 * IQR\n",
        "        upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "        outliers[column] = df.filter((df[column] < lower_bound) | (df[column] > upper_bound)).select(column)\n",
        "\n",
        "        print(f\"Outliers in {column}:\")\n",
        "        outliers[column].show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LGYjw-KlWNIG",
        "outputId": "e8e1521d-45d0-4add-89a0-9f3702930b13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Outliers in ApplicantIncome:\n",
            "+---------------+\n",
            "|ApplicantIncome|\n",
            "+---------------+\n",
            "|          12841|\n",
            "|           9560|\n",
            "|          12500|\n",
            "|          11500|\n",
            "|          10750|\n",
            "|          13650|\n",
            "|          11417|\n",
            "|          14583|\n",
            "|          10408|\n",
            "|          23803|\n",
            "|          10513|\n",
            "|          20166|\n",
            "|          14999|\n",
            "|          11757|\n",
            "|          14866|\n",
            "|          10000|\n",
            "|           9166|\n",
            "|          39999|\n",
            "|           9538|\n",
            "|           9323|\n",
            "+---------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "Outliers in LoanAmount:\n",
            "+----------+\n",
            "|LoanAmount|\n",
            "+----------+\n",
            "|       267|\n",
            "|       349|\n",
            "|       315|\n",
            "|       320|\n",
            "|       286|\n",
            "|       258|\n",
            "|       312|\n",
            "|       265|\n",
            "|       259|\n",
            "|       370|\n",
            "|       650|\n",
            "|       290|\n",
            "|       600|\n",
            "|       255|\n",
            "|       275|\n",
            "|       700|\n",
            "|       495|\n",
            "|       260|\n",
            "|       280|\n",
            "|       255|\n",
            "+----------+\n",
            "only showing top 20 rows\n",
            "\n",
            "Outliers in Loan_Amount_Term:\n",
            "+----------------+\n",
            "|Loan_Amount_Term|\n",
            "+----------------+\n",
            "|             120|\n",
            "|             240|\n",
            "|             180|\n",
            "|             180|\n",
            "|              60|\n",
            "|             300|\n",
            "|             480|\n",
            "|             300|\n",
            "|             240|\n",
            "|             180|\n",
            "|             120|\n",
            "|             180|\n",
            "|             180|\n",
            "|             480|\n",
            "|             180|\n",
            "|             180|\n",
            "|             480|\n",
            "|             120|\n",
            "|             180|\n",
            "|             180|\n",
            "+----------------+\n",
            "only showing top 20 rows\n",
            "\n",
            "Outliers in Credit_History:\n",
            "+--------------+\n",
            "|Credit_History|\n",
            "+--------------+\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "|             0|\n",
            "+--------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Distribuiton of numerical variables\n",
        "numeric_cols = [col for col, dtype in df.dtypes if dtype in ['int', 'double']]\n",
        "for col in numeric_cols:\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    sns.histplot(df.toPandas()[col], kde=True, color='skyblue')\n",
        "    plt.title(f'Distribution of {col}')\n",
        "    plt.xlabel(col)\n",
        "    plt.ylabel('Frequency')\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "cCD1C5KYqNdL",
        "outputId": "d4ae534c-0d63-426d-da30-9f2e2ae375c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Correlation\n",
        "numerical_columns = [col for col, dtype in df.dtypes if dtype in ('int', 'double', 'float')]\n",
        "df_numerical = df.select(numerical_columns)\n",
        "correlation_matrix = df_numerical.toPandas().corr()\n",
        "\n",
        "print(\"Correlation Matrix:\")\n",
        "print(correlation_matrix)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4f-n4tjCVE-Z",
        "outputId": "a3dfbb18-41b0-4917-c365-8aea76028dbb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Correlation Matrix:\n",
            "                   ApplicantIncome  CoapplicantIncome  LoanAmount  \\\n",
            "ApplicantIncome           1.000000          -0.116605    0.570909   \n",
            "CoapplicantIncome        -0.116605           1.000000    0.188619   \n",
            "LoanAmount                0.570909           0.188619    1.000000   \n",
            "Loan_Amount_Term         -0.045306          -0.059878    0.039447   \n",
            "Credit_History           -0.014715          -0.002056   -0.008433   \n",
            "\n",
            "                   Loan_Amount_Term  Credit_History  \n",
            "ApplicantIncome           -0.045306       -0.014715  \n",
            "CoapplicantIncome         -0.059878       -0.002056  \n",
            "LoanAmount                 0.039447       -0.008433  \n",
            "Loan_Amount_Term           1.000000        0.001470  \n",
            "Credit_History             0.001470        1.000000  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Scatterplot\n",
        "\n",
        "#Relationship between the income of applicants and the amount of loan they have applied for.\n",
        "pandas_df = df.toPandas()\n",
        "plt.scatter(pandas_df['ApplicantIncome'], pandas_df['LoanAmount'])\n",
        "plt.xlabel('ApplicantIncome')\n",
        "plt.ylabel('LoanAmount')\n",
        "plt.title('Scatter Plot: Applicant Income vs. Loan Amount')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "UPkcUDdeXDfg",
        "outputId": "7d5f77a8-0238-4fe4-a5d2-621b101230af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Distribution of loan amounts based on the term of the loan.\n",
        "pandas_df = df.toPandas()\n",
        "plt.scatter(pandas_df['ApplicantIncome'], pandas_df['Loan_Amount_Term'])\n",
        "plt.xlabel('ApplicantIncome')\n",
        "plt.ylabel('Loan_Amount_Term')\n",
        "plt.title('Scatter Plot: Applicant Income vs. Loan Amount Term')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "GV0UN2l0iIVZ",
        "outputId": "21e37642-7196-4159-cb5b-fb9ccee52db4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#correlation matrix\n",
        "numerical_columns = [col for col, dtype in df.dtypes if dtype in (IntegerType, FloatType)]\n",
        "numeric_df = df.select(numerical_columns)\n",
        "\n",
        "pandas_df = df.toPandas()\n",
        "\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Correlation Matrix')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 820
        },
        "id": "Qo_fc5eyYKdY",
        "outputId": "dadd94c6-927d-4455-8867-10bccde83b27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## DATA PREPROCESSING"
      ],
      "metadata": {
        "id": "Mz11jOKfYxZj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Data cleaning\n",
        "\n",
        "from pyspark.sql.functions import col, count, isnan, when\n",
        "total_count = df.count()  # Total number of rows in the DataFrame\n",
        "\n",
        "missing_percentage = df.select(*[\n",
        "    ((count(when(col(c).isNull() | isnan(col(c)), True)) / total_count) * 100).alias(c + '_missing_perc')\n",
        "    for c in df.columns\n",
        "])\n",
        "\n",
        "missing_percentage.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l6r5cns2N7j6",
        "outputId": "115bff63-c86d-4cf0-c5ef-faeaaaca6763"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------------+-------------------+--------------------+-----------------------+----------------------+--------------------------+----------------------------+------------------------------+-----------------------+-----------------------------+---------------------------+--------------------------+------------------------+\n",
            "|Loan_ID_missing_perc|Gender_missing_perc|Married_missing_perc|Dependents_missing_perc|Education_missing_perc|Self_Employed_missing_perc|ApplicantIncome_missing_perc|CoapplicantIncome_missing_perc|LoanAmount_missing_perc|Loan_Amount_Term_missing_perc|Credit_History_missing_perc|Property_Area_missing_perc|Loan_Status_missing_perc|\n",
            "+--------------------+-------------------+--------------------+-----------------------+----------------------+--------------------------+----------------------------+------------------------------+-----------------------+-----------------------------+---------------------------+--------------------------+------------------------+\n",
            "|                 0.0| 2.1172638436482085|  0.4885993485342019|       2.44299674267101|                   0.0|         5.211726384364821|                         0.0|                           0.0|     3.5830618892508146|           2.2801302931596092|          8.143322475570033|                       0.0|                     0.0|\n",
            "+--------------------+-------------------+--------------------+-----------------------+----------------------+--------------------------+----------------------------+------------------------------+-----------------------+-----------------------------+---------------------------+--------------------------+------------------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Imputing null values in the categorical columns\n",
        "\n",
        "# mode calculation for each categorical column.\n",
        "mode_gender = df.groupBy(\"Gender\").count().orderBy('count', ascending=False).first()[0]\n",
        "mode_married = df.groupBy(\"Married\").count().orderBy('count', ascending=False).first()[0]\n",
        "mode_dependents = df.groupBy(\"Dependents\").count().orderBy('count', ascending=False).first()[0]\n",
        "mode_self_employed = df.groupBy(\"Self_Employed\").count().orderBy('count', ascending=False).first()[0]\n",
        "\n",
        "# fill in missing values\n",
        "df = df.na.fill({\n",
        "    'Gender': mode_gender,\n",
        "    'Married': mode_married,\n",
        "    'Dependents': mode_dependents,\n",
        "    'Self_Employed': mode_self_employed\n",
        "})\n"
      ],
      "metadata": {
        "id": "WK1UfGswUhse"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.select([count(when(col(c).isNull(), c)).alias(c) for c in ['Gender', 'Married', 'Dependents', 'Self_Employed']]).show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AfttlwlHUK3i",
        "outputId": "b99ef4d1-d742-4377-8dd5-ea0b3053d70c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+------+-------+----------+-------------+\n",
            "|Gender|Married|Dependents|Self_Employed|\n",
            "+------+-------+----------+-------------+\n",
            "|     0|      0|         0|            0|\n",
            "+------+-------+----------+-------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(25)"
      ],
      "metadata": {
        "id": "p9hr0VQvU0Qw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Imputing null values from the numerical columns\n",
        "\n",
        "median_loan_amount = df.approxQuantile('LoanAmount', [0.5], 0.01)[0]\n",
        "median_loan_amount_term = df.approxQuantile('Loan_Amount_Term', [0.5], 0.01)[0]\n",
        "\n",
        "df = df.na.fill({\n",
        "    'LoanAmount': median_loan_amount,\n",
        "    'Loan_Amount_Term': median_loan_amount_term\n",
        "})"
      ],
      "metadata": {
        "id": "TrOHnX30VHPV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.select([count(when(col(c).isNull(), c)).alias(c) for c in ['Loan_Amount_Term', 'LoanAmount']]).show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "edgeg1eJVJmY",
        "outputId": "f6d30f81-cd95-47dc-d247-e2c18ca5b761"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+----------------+----------+\n",
            "|Loan_Amount_Term|LoanAmount|\n",
            "+----------------+----------+\n",
            "|               0|         0|\n",
            "+----------------+----------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Credit History\n",
        "mode_credit_history = df.agg({\"Credit_History\": \"max\"}).collect()[0][0]\n",
        "df = df.na.fill({'Credit_History': mode_credit_history})"
      ],
      "metadata": {
        "id": "yJtqHkjYWBQ4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.select([count(when(col(c).isNull(), c)).alias(c) for c in ['Credit_History']]).show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eKJulnn3c8hB",
        "outputId": "3456ef46-be3c-40e4-e8d4-83c86d35d367"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------+\n",
            "|Credit_History|\n",
            "+--------------+\n",
            "|             0|\n",
            "+--------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_clean = df.dropDuplicates()"
      ],
      "metadata": {
        "id": "78LShNr7WHO5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_clean.show(30)"
      ],
      "metadata": {
        "id": "tjrI4RFmWOIE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Encoding categorical variables\n",
        "from pyspark.ml.feature import StringIndexer, OneHotEncoder"
      ],
      "metadata": {
        "id": "EqSmZtmpaezk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.select(\"Gender\").distinct().show()\n",
        "df.select(\"Married\").distinct().show()\n",
        "df.select(\"Education\").distinct().show()\n",
        "df.select(\"Self_Employed\").distinct().show()\n",
        "df.select(\"Loan_Status\").distinct().show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JfiP6GDxajOm",
        "outputId": "0c5253d8-91fe-4489-eaeb-70e81b0c6721"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+------+\n",
            "|Gender|\n",
            "+------+\n",
            "|Female|\n",
            "|  Male|\n",
            "+------+\n",
            "\n",
            "+-------+\n",
            "|Married|\n",
            "+-------+\n",
            "|     No|\n",
            "|    Yes|\n",
            "+-------+\n",
            "\n",
            "+------------+\n",
            "|   Education|\n",
            "+------------+\n",
            "|Not Graduate|\n",
            "|    Graduate|\n",
            "+------------+\n",
            "\n",
            "+-------------+\n",
            "|Self_Employed|\n",
            "+-------------+\n",
            "|           No|\n",
            "|          Yes|\n",
            "+-------------+\n",
            "\n",
            "+-----------+\n",
            "|Loan_Status|\n",
            "+-----------+\n",
            "|          Y|\n",
            "|          N|\n",
            "+-----------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.sql.functions import when\n",
        "\n",
        "# Encoding Gender as 1 for 'Male' and 0 for 'Female'\n",
        "df_encoded = df.withColumn(\"Gender\", when(df[\"Gender\"] == \"Male\", 1).otherwise(0))\n",
        "\n",
        "# Encoding Married as 1 for 'Yes' and 0 for 'No'\n",
        "df_encoded = df_encoded.withColumn(\"Married\", when(df[\"Married\"] == \"Yes\", 1).otherwise(0))\n",
        "\n",
        "# Encoding Education as 1 for 'Graduate' and 0 for 'Not Graduate'\n",
        "df_encoded = df_encoded.withColumn(\"Education\", when(df[\"Education\"] == \"Graduate\", 1).otherwise(0))\n",
        "\n",
        "# Encoding Self_Employed as 1 for 'Yes' and 0 for 'No'\n",
        "self_encoded = df_encoded.withColumn(\"Self_Employed\", when(df[\"Self_Employed\"] == \"Yes\", 1).otherwise(0))\n",
        "\n",
        "# Encoding Loan_Status as 1 for 'Y' and 0 for 'N'\n",
        "df_encoded = df_encoded.withColumn(\"Loan_Status\", when(df[\"Loan_Status\"] == \"Y\", 1).otherwise(0))\n",
        "\n",
        "df_encoded.show(20)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ySpM7O7kge69",
        "outputId": "9b3e98ff-a856-40a5-d877-a638a82a095f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+------+-------+----------+---------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "| Loan_ID|Gender|Married|Dependents|Education|Self_Employed|ApplicantIncome|CoapplicantIncome|LoanAmount|Loan_Amount_Term|Credit_History|Property_Area|Loan_Status|\n",
            "+--------+------+-------+----------+---------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "|LP001002|     1|      0|         0|        1|           No|           5849|              0.0|       126|             360|             1|        Urban|          1|\n",
            "|LP001003|     1|      1|         1|        1|           No|           4583|           1508.0|       128|             360|             1|        Rural|          0|\n",
            "|LP001005|     1|      1|         0|        1|          Yes|           3000|              0.0|        66|             360|             1|        Urban|          1|\n",
            "|LP001006|     1|      1|         0|        0|           No|           2583|           2358.0|       120|             360|             1|        Urban|          1|\n",
            "|LP001008|     1|      0|         0|        1|           No|           6000|              0.0|       141|             360|             1|        Urban|          1|\n",
            "|LP001011|     1|      1|         2|        1|          Yes|           5417|           4196.0|       267|             360|             1|        Urban|          1|\n",
            "|LP001013|     1|      1|         0|        0|           No|           2333|           1516.0|        95|             360|             1|        Urban|          1|\n",
            "|LP001014|     1|      1|        3+|        1|           No|           3036|           2504.0|       158|             360|             0|    Semiurban|          0|\n",
            "|LP001018|     1|      1|         2|        1|           No|           4006|           1526.0|       168|             360|             1|        Urban|          1|\n",
            "|LP001020|     1|      1|         1|        1|           No|          12841|          10968.0|       349|             360|             1|    Semiurban|          0|\n",
            "|LP001024|     1|      1|         2|        1|           No|           3200|            700.0|        70|             360|             1|        Urban|          1|\n",
            "|LP001027|     1|      1|         2|        1|           No|           2500|           1840.0|       109|             360|             1|        Urban|          1|\n",
            "|LP001028|     1|      1|         2|        1|           No|           3073|           8106.0|       200|             360|             1|        Urban|          1|\n",
            "|LP001029|     1|      0|         0|        1|           No|           1853|           2840.0|       114|             360|             1|        Rural|          0|\n",
            "|LP001030|     1|      1|         2|        1|           No|           1299|           1086.0|        17|             120|             1|        Urban|          1|\n",
            "|LP001032|     1|      0|         0|        1|           No|           4950|              0.0|       125|             360|             1|        Urban|          1|\n",
            "|LP001034|     1|      0|         1|        0|           No|           3596|              0.0|       100|             240|             1|        Urban|          1|\n",
            "|LP001036|     0|      0|         0|        1|           No|           3510|              0.0|        76|             360|             0|        Urban|          0|\n",
            "|LP001038|     1|      1|         0|        0|           No|           4887|              0.0|       133|             360|             1|        Rural|          0|\n",
            "|LP001041|     1|      1|         0|        1|           No|           2600|           3500.0|       115|             360|             1|        Urban|          1|\n",
            "+--------+------+-------+----------+---------+-------------+---------------+-----------------+----------+----------------+--------------+-------------+-----------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## COMBINING ALL FEATURES"
      ],
      "metadata": {
        "id": "pGhVIw15hqst"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.feature import VectorAssembler\n"
      ],
      "metadata": {
        "id": "ME9BhvD6hFQ0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "feature_columns = [\"Gender\", \"Married\", \"ApplicantIncome\", \"CoapplicantIncome\", \"LoanAmount\", \"Loan_Amount_Term\", \"Credit_History\"]\n",
        "assembler = VectorAssembler(inputCols=feature_columns, outputCol=\"features\")\n",
        "df_assembled = assembler.transform(df_encoded)"
      ],
      "metadata": {
        "id": "sUkPN80bhWYK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#'Loan_Status' is the target variable\n",
        "features = [\"Gender\", \"Married\", \"ApplicantIncome\", \"CoapplicantIncome\", \"LoanAmount\", \"Loan_Amount_Term\", \"Credit_History\"]\n",
        "target = \"Loan_Status\""
      ],
      "metadata": {
        "id": "3As9DpX0mpJ5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## LOGISTIC REGRESSION MODEL"
      ],
      "metadata": {
        "id": "hwOwjZZtiYCq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.classification import LogisticRegression\n",
        "from pyspark.ml.evaluation import BinaryClassificationEvaluator\n",
        "from pyspark.ml import Pipeline"
      ],
      "metadata": {
        "id": "EGKG4O99UWlr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Create training & testing data\n",
        "training_data, testing_data = df_assembled.randomSplit([0.8, 0.2], seed = 42) # divides the dataset into training and testing\n",
        "print(\"Training Dataset Count:\", training_data.count())\n",
        "print(\"Test Dataset Count:\", testing_data.count())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DRim-Llwh4e-",
        "outputId": "86ecc8c9-ec09-41bb-8737-2ebc3e0131e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training Dataset Count: 517\n",
            "Test Dataset Count: 97\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Initialize the logistic regression model\n",
        "log_reg = LogisticRegression(featuresCol=\"features\", labelCol=target)\n",
        "\n",
        "# Fit the model to the training data\n",
        "log_reg_model = log_reg.fit(training_data)"
      ],
      "metadata": {
        "id": "IuEfI5bYnEM-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predictions_lr = log_reg_model.transform(testing_data)"
      ],
      "metadata": {
        "id": "tpwJZWkwMv_f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Coefficients: \\n\" + str(log_reg_model.coefficientMatrix)) # gives the model coef\n",
        "print(\"Intercept: \" + str(log_reg_model.interceptVector))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "703W4tu2oOcK",
        "outputId": "f5d9615c-4fa7-4b3e-d7ae-3135f9e0bc90"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficients: \n",
            "DenseMatrix([[-3.83576394e-02,  5.22384853e-01,  3.26498518e-05,\n",
            "              -1.83991672e-05, -2.70037127e-03,  4.64452452e-04,\n",
            "               3.64187439e+00]])\n",
            "Intercept: [-2.4490618926602297]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpretations:\n",
        "\n",
        "Gender: The negative coefficient (-0.0384) suggests that being males slightly decreases the log odds of loan approval compared to being female, holding all other factors constant.\n",
        "\n",
        "Married: The positive coefficient (0.5224) indicates that being married increases the log odds of loan approval compared to being unmarried, holding all other factors constant.\n",
        "\n",
        "ApplicantIncome: The coefficient (0.00003) suggests that for every one-unit increase in applicant income, the log odds of loan approval slightly increase, holding all other factors constant.\n",
        "\n",
        "CoapplicantIncome: The coefficient (-0.00002) suggests that for every one-unit increase in coapplicant income, the log odds of loan approval slightly decrease, holding all other factors constant.\n",
        "\n",
        "LoanAmount: The coefficient (-0.0027) suggests that for every one-unit increase in loan amount, the log odds of loan approval slightly decrease, holding all other factors constant.\n",
        "\n",
        "Loan_Amount_Term: The coefficient (0.00046) suggests that for every one-unit increase in the loan amount term, the log odds of loan approval slightly increase, holding all other factors constant.\n",
        "\n",
        "Credit_History: The large positive coefficient (3.6419) indicates that having a good credit history (1) significantly increases the log odds of loan approval compared to having a poor credit history (0), holding all other factors constant."
      ],
      "metadata": {
        "id": "4XpjIjjzo7Ag"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# EVALUATING MODEL PERFORMANCE"
      ],
      "metadata": {
        "id": "kr7v7HbhSkcd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "log_reg_model.transform(training_data).select('probability', 'prediction').toPandas()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Rx7PsNJRnS0T",
        "outputId": "f4c26ed2-fbfd-4f10-a0af-d6f3f737432e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                   probability  prediction\n",
              "0         [0.23642506819127, 0.76357493180873]         1.0\n",
              "1    [0.16516579030975384, 0.8348342096902461]         1.0\n",
              "2    [0.17351074775834355, 0.8264892522416565]         1.0\n",
              "3    [0.24290754170505197, 0.7570924582949481]         1.0\n",
              "4     [0.2274608057201527, 0.7725391942798473]         1.0\n",
              "..                                         ...         ...\n",
              "512   [0.1649225592229945, 0.8350774407770055]         1.0\n",
              "513  [0.22046243049372288, 0.7795375695062772]         1.0\n",
              "514   [0.1435040182464439, 0.8564959817535561]         1.0\n",
              "515  [0.19466433282961343, 0.8053356671703866]         1.0\n",
              "516  [0.9235348968486354, 0.07646510315136457]         0.0\n",
              "\n",
              "[517 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-882eaf6e-9345-4619-b9b4-cad4cac616cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>probability</th>\n",
              "      <th>prediction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>[0.23642506819127, 0.76357493180873]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>[0.16516579030975384, 0.8348342096902461]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>[0.17351074775834355, 0.8264892522416565]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>[0.24290754170505197, 0.7570924582949481]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>[0.2274608057201527, 0.7725391942798473]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>512</th>\n",
              "      <td>[0.1649225592229945, 0.8350774407770055]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>513</th>\n",
              "      <td>[0.22046243049372288, 0.7795375695062772]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>514</th>\n",
              "      <td>[0.1435040182464439, 0.8564959817535561]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>515</th>\n",
              "      <td>[0.19466433282961343, 0.8053356671703866]</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>516</th>\n",
              "      <td>[0.9235348968486354, 0.07646510315136457]</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>517 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-882eaf6e-9345-4619-b9b4-cad4cac616cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-882eaf6e-9345-4619-b9b4-cad4cac616cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-882eaf6e-9345-4619-b9b4-cad4cac616cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-15f5ef2f-3f57-44a7-9546-293717a5055a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15f5ef2f-3f57-44a7-9546-293717a5055a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-15f5ef2f-3f57-44a7-9546-293717a5055a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"log_reg_model\",\n  \"rows\": 517,\n  \"fields\": [\n    {\n      \"column\": \"probability\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 517,\n        \"samples\": [\n          \"[0.8748826959936749,0.12511730400632515]\",\n          \"[0.24053223224365747,0.7594677677563425]\",\n          \"[0.3372626013801717,0.6627373986198283]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prediction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34856421027060536,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Evaluate model performance using binary classification evaluator\n",
        "evaluator = BinaryClassificationEvaluator(labelCol=target)\n",
        "auc = evaluator.evaluate(predictions_lr)\n",
        "\n",
        "print(\"Area Under ROC Curve (AUC):\", auc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n5hw5IJJocFk",
        "outputId": "4201694d-eb62-44d8-d242-5d13e2278ec8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Area Under ROC Curve (AUC): 0.8068688670829616\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**This logistic regression model has an accuracy rate of approx. 80% in predicting loan approval**"
      ],
      "metadata": {
        "id": "UI0cm76opgku"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "roc_curve = predictions_lr.select(\"Loan_Status\", \"probability\").rdd.map(lambda x: (float(x[\"probability\"][1]), float(x[\"Loan_Status\"]))).collect()\n",
        "\n",
        "roc_curve.sort(key=lambda x: x[0])\n",
        "\n",
        "tpr = [x[1] for x in roc_curve]\n",
        "fpr = [1 - x[0] for x in roc_curve]\n",
        "\n",
        "# Plot ROC curve\n",
        "plt.figure(figsize=(5, 5))\n",
        "plt.plot([0, 1], [0, 1], 'r--')  # Diagonal line\n",
        "plt.plot(fpr, tpr)\n",
        "plt.xlabel('False Positive Rate (FPR)')\n",
        "plt.ylabel('True Positive Rate (TPR)')\n",
        "plt.title('ROC Curve')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "dO68usUxTPI3",
        "outputId": "948d5c8b-f900-4750-ab56-5d83c3ac6532"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The logistic regression model was trained on a dataset split into 80% training and 20% testing data, comprising 517 and 97 observations. The model's coefficients indicate that being married and having a good credit history positively influences the likelihood of loan approval, while being male and having higher coapplicant income negatively affect it. The model's predictions on the testing data yielded an area under the ROC curve (AUC) of approximately 0.807, suggesting that it has reasonable discriminatory power in distinguishing between approved and denied loans.\n",
        "\n",
        "These results indicate that marital status and credit history are significant predictors of loan approval."
      ],
      "metadata": {
        "id": "uvFilPEjOlyU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.evaluation import MulticlassClassificationEvaluator\n",
        "\n",
        "# Precision\n",
        "evaluator_precision = MulticlassClassificationEvaluator(labelCol=\"Loan_Status\", metricName=\"weightedPrecision\")\n",
        "precision = evaluator_precision.evaluate(predictions_lr)\n",
        "print(\"Precision:\", precision)\n",
        "\n",
        "# Recall\n",
        "evaluator_recall = MulticlassClassificationEvaluator(labelCol=\"Loan_Status\", metricName=\"weightedRecall\")\n",
        "recall = evaluator_recall.evaluate(predictions_lr)\n",
        "print(\"Recall:\", recall)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2Se70S1aSrVm",
        "outputId": "870a618d-7bb5-4605-f1c8-ab7a87bc92a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Precision: 0.8403350515463918\n",
            "Recall: 0.7835051546391751\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The **precision** is approximately 0.840, which means that about 84% of the predicted loan approvals are correct out of all instances predicted as approved.\n",
        "- The precision value suggests that the model is relatively good at avoiding false positives, meaning it correctly identifies most of the actual loan approvals out of all instances predicted as approved.\n",
        "\n",
        "the **recall** is approximately 0.784, indicating that about 78.4% of the actual loan approvals are correctly identified by the model.\n",
        "- The recall value indicates that the model correctly identifies a substantial portion of actual loan approvals."
      ],
      "metadata": {
        "id": "vdSCJ2zQS3IT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## RANDOM FOREST MODEL"
      ],
      "metadata": {
        "id": "ODC-DwS7qCeT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.classification import RandomForestClassifier\n",
        "from pyspark.ml.evaluation import BinaryClassificationEvaluator, MulticlassClassificationEvaluator"
      ],
      "metadata": {
        "id": "2MkMhPV3qh4f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "features = [\"Gender_Encoded\", \"Married_Encoded\", \"ApplicantIncome\", \"CoapplicantIncome\", \"LoanAmount\", \"Loan_Amount_Term\", \"Credit_History\"]\n",
        "target = \"Loan_Status\""
      ],
      "metadata": {
        "id": "zq4Ibn67qnj2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_data, test_data = df_encoded.randomSplit([0.8, 0.2], seed=42)"
      ],
      "metadata": {
        "id": "-JuPRu79qpZh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rf = RandomForestClassifier(featuresCol=\"features\", labelCol=target, numTrees=100)\n",
        "rf_model = rf.fit(training_data)"
      ],
      "metadata": {
        "id": "pi-kwvNPqrtK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predictions_rf = rf_model.transform(testing_data)"
      ],
      "metadata": {
        "id": "CXYYy3IwqxRp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## EVALUATING RANDOM FOREST MODEL PERFORMANCE"
      ],
      "metadata": {
        "id": "_LyRwc_kbfbQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "evaluator_rf = BinaryClassificationEvaluator(labelCol=target)\n",
        "auc_rf = evaluator_rf.evaluate(predictions_rf)\n",
        "print(\"Area Under ROC Curve (AUC) - Random Forest:\", auc_rf)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s_uUlKjUq0lr",
        "outputId": "ae5e808b-6f55-4f8d-cc06-71fc0cacb8f0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Area Under ROC Curve (AUC) - Random Forest: 0.7734165923282783\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**since accuracy score is more 75%, this model is able to make accurate predictions**"
      ],
      "metadata": {
        "id": "YlZoCHKbrAjc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the MulticlassClassificationEvaluator\n",
        "evaluator_mc = MulticlassClassificationEvaluator(labelCol=target)\n",
        "\n",
        "# Compute accuracy\n",
        "accuracy_rf = evaluator_mc.evaluate(predictions_rf, {evaluator_mc.metricName: \"accuracy\"})\n",
        "print(\"Accuracy - Random Forest:\", accuracy_rf)\n",
        "\n",
        "# Compute precision\n",
        "precision_rf = evaluator_mc.evaluate(predictions_rf, {evaluator_mc.metricName: \"weightedPrecision\"})\n",
        "print(\"Precision - Random Forest:\", precision_rf)\n",
        "\n",
        "# Compute recall\n",
        "recall_rf = evaluator_mc.evaluate(predictions_rf, {evaluator_mc.metricName: \"weightedRecall\"})\n",
        "print(\"Recall - Random Forest:\", recall_rf)\n",
        "\n",
        "# Compute F1-score\n",
        "f1_rf = evaluator_mc.evaluate(predictions_rf, {evaluator_mc.metricName: \"f1\"})\n",
        "print(\"F1-score - Random Forest:\", f1_rf)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PUiM49UtXTFw",
        "outputId": "c5cf0c6f-6323-4fba-a314-cb2069986738"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy - Random Forest: 0.7835051546391752\n",
            "Precision - Random Forest: 0.8403350515463918\n",
            "Recall - Random Forest: 0.7835051546391751\n",
            "F1-score - Random Forest: 0.7585282476923804\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Accuracy**: The Random Forest model achieved an accuracy of approximately 78.35%. This means that around 78.35% of the predictions made by the model were correct.\n",
        "\n",
        "**Precision**: The precision of the Random Forest model is approximately 84.03%. When the model predicts a loan approval, it is correct about 84.03% of the time.\n",
        "\n",
        "**Recall**: The recall of the Random Forest model is approximately 78.35%. The model correctly identifies about 78.35% of all actual loan approvals.\n",
        "\n",
        "F1-score: The F1-score of the Random Forest model is approximately 75.85%.A higher F1-score indicates better overall performance in terms of both precision and recall."
      ],
      "metadata": {
        "id": "Qw6varuwb1Jb"
      }
    }
  ]
}